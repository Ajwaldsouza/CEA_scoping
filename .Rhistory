View(study_focus)
View(study_focus)
#Melting dataset to contain all focus levels in one column
study <-  study_focus%>%
select(c(-2))%>%
reshape2::melt( id.vars = c(1))%>%select(c(-2,6))%>%na.omit()
# Creating individual string with study ids for each focus level
focus_tech <- study[study$value == "Technical", ]%>% # Filtering to contain one specified factor level
dplyr::rename(tech = study_id)%>%
select(c(1))%>%
as.list()%>%
unlist()
focus_bio <- study[study$value == "Biological", ]%>% # One factor level
dplyr::rename(bio = study_id)%>%
select(c(1))%>%
as.list()%>%
unlist()
focus_soc <- study[study$value == "Socio-economical", ]%>% # One factor level
dplyr::rename(soc = study_id)%>%
select(c(1))%>%
as.list()%>%
unlist()
focus_env <- study[study$value == "Environmental", ]%>% # One factor level
dplyr::rename(env = study_id)%>%
select(c(1))%>%
as.list()%>%
unlist()
# Plotting venn diagram using the venn.diagram function
venn.diagram(
x=list(A = focus_bio, B = focus_env, C = focus_soc, D =focus_tech),
category.names = c("Biological" , "Environmental" , "Socio-economical", "Technical"),
fontfamily = "sans",
main.fontfamily = "sans",
cat.fontfamily = "sans",
lty = 'blank',
cat.col =c("#377eb8","#4daf4a","#984ea3","#ff7f00"),
fill = c("#377eb8","#4daf4a","#984ea3","#ff7f00"), alpha = 0.2,
filename = "venn.png",
resolution = 600,
compression = "lzw",
output = F
)
# Input in the form of a named numeric vector
matrix <- euler(c("Biological" = 301, "Socio-economic" = 40, "Technical" = 136, "Environmental" = 27,
"Biological&Socio-economic" = 4, "Biological&Technical" = 44, "Socio-economic&Technical" = 10, "Biological&Environmental" = 7, "Socio-economic&Environmental" = 21, "Technical&Environmental" = 19,
"Biological&Socio-economic&Technical" = 1, "Socio-economic&Technical&Environmental" = 9, "Biological&Socio-economic&Environmental" = 1, "Biological&Technical&Environmental" = 0,
"Biological&Socio-economic&Technical&Environmental" = 0))
eulerr_options(labels = list(col = c("#377eb8","#4daf4a","#984ea3","#ff7f00"))) #setting the global options for euler plot function-here, label font colours
venn_euler <-
plot(matrix,
quantities = TRUE,
lty = 0,
fills = list(fill = c("#377eb8","#4daf4a","#984ea3","#ff7f00"), alpha = 0.2),
)
#VENN-EULER
ggsave("Plots/venn.pdf", venn_euler,  width=6, height=5)
photobio_focus <- study_focus%>%
select(c(1,6))
View(photobio_focus)
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo, y = study_id))+
geom_bar(stat = "count")
photobio_focus
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo))+
geom_bar(stat = "count")
photobio_focus
summarySE(study_focus, measurevar = "study_id", groupvars = "photo")
summarySE(data = study_focus, measurevar = "study_id", groupvars = "photo")
study_focus <- read_excel("Data/study_records/data_ext.xlsx", sheet = "savedrecs")%>%
dplyr::rename(
"study_id" = "Study ID No." ,
"year" = "Publication Year",
"theme_1" = "Theme 1",
"theme_2" = "Theme 2",
"theme_3" = "Theme 3",
"photo" = "Environment"
)%>%
dplyr::mutate(
study_id = as.numeric(study_id),
theme_1 = as.factor(theme_1),
theme_2 = as.factor(theme_2),
theme_3 = as.factor(theme_3),
photo = as.factor(photo)
)%>%
dplyr::select(c(1,7,9,10,11, 12))
summarySE(data = study_focus, measurevar = "study_id", groupvars = "photo")
study_focus <- read_excel("Data/study_records/data_ext.xlsx", sheet = "savedrecs")%>%
dplyr::rename(
"study_id" = "Study ID No." ,
"year" = "Publication Year",
"theme_1" = "Theme 1",
"theme_2" = "Theme 2",
"theme_3" = "Theme 3",
"photo" = "Environment"
)%>%
dplyr::mutate(
study_id = as.factor(study_id),
theme_1 = as.factor(theme_1),
theme_2 = as.factor(theme_2),
theme_3 = as.factor(theme_3),
photo = as.factor(photo)
)%>%
dplyr::select(c(1,7,9,10,11, 12))
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo))+
geom_bar(stat = "count")+
coord_flip()
photobio_focus
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo))+
geom_bar(stat = "count")+
coord_flip()+
theme_pubr()+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none"
)
photobio_focus
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo))+
geom_bar(stat = "count")+
coord_flip()+
theme_pubr()+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none",
axis.ticks.x = element_blank()
)
photobio_focus
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo))+
geom_bar(stat = "count")+
coord_flip()+
theme_pubr()+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none",
axis.ticks.y = element_blank()
)
photobio_focus
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo))+
geom_bar(stat = "count")+
coord_flip()+
theme_pubr()+
labs(x = "")
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo))+
geom_bar(stat = "count")+
coord_flip()+
theme_pubr()+
labs(x = "")+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none",
axis.ticks.y = element_blank()
)
photobio_focus
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo))+
geom_bar(stat = "count")+
coord_flip()+
theme_pubr()+
labs(x = "", y = "No. of studies")+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none",
axis.ticks.y = element_blank()
)
photobio_focus
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo))+
geom_bar(stat = "count", fill = "#377eb8")+
coord_flip()+
theme_pubr()+
labs(x = "", y = "No. of studies")+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none",
axis.ticks.y = element_blank()
)
photobio_focus
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo))+
geom_bar(stat = "count", fill = "#377eb8", alpha = 0.3)+
coord_flip()+
theme_pubr()+
labs(x = "", y = "No. of studies")+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none",
axis.ticks.y = element_blank()
)
photobio_focus
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo))+
geom_bar(stat = "count", fill = "#C0D2E5")+
coord_flip()+
theme_pubr()+
labs(x = "", y = "No. of studies")+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none",
axis.ticks.y = element_blank()
)
photobio_focus
ggarrange(venn_euler, photobio_focus, labels = "auto" )
ggarrange(venn_euler, photobio_focus, labels = "auto" )%>%
ggsave("Plots/venn_bar.pdf",  width=8, height=5)
venn_bar <- ggarrange(venn_euler, photobio_focus, labels = "auto" )
ggsave("Plots/venn_bar.pdf", venn_bar, width=8.2, height=5)
ggsave("Plots/venn_bar.pdf", venn_bar, width=9, height=5)
ggsave("Plots/venn_bar.pdf", venn_bar, width=10, height=5)
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo))+
geom_bar(stat = "count", fill = "#C0D2E5", width  =.5)+
coord_flip()+
theme_pubr()+
labs(x = "", y = "No. of studies")+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none",
axis.ticks.y = element_blank()
)
venn_bar <- ggarrange(venn_euler, photobio_focus, labels = "auto" )
ggsave("Plots/venn_bar.pdf", venn_bar, width=10, height=5)
ggsave("Plots/venn_bar.pdf", venn_bar, width=10, height=4.65)
focus_year <- read_excel("Data/study_records/focus_year.xlsx", sheet = "Sheet1")
#Create counts normalised by anuual publication counts
focus_year$norm_count <- (focus_year$count)/(focus_year$annual)
focus_trend <-
ggplot(data = focus_year, aes(x = year, y = category, fill = count))+
geom_raster()+
scale_fill_gradient(low="white", high="royalblue4")+
scale_y_discrete(labels= c("Tecnological", "Socio-economical", "Environmental", "Biological"))+
labs(x= "Year", y = "Research focus", fill = "No. of Studies")+
theme_bw()+
theme(axis.text=element_text(size=12))
focus_trend
ggsave("Plots/focus_trend.pdf", focus_trend, width=9, height=3.5)
# CROP COUNT
crop_data <- read_excel("Data/crop/crop_data_extraction.xlsx", sheet = "savedrecs")%>%
dplyr::select(c(1, 10, 11))%>%
dplyr::mutate(
crop = as.factor(crop),
crop_category = as.factor(crop_category),
study_id = as.factor(study_id)
)
crop_data <- separate_rows(crop_data, crop, sep = ",")# Separating comma separated multiple crops per study into individual column
# Create a dataset with crop counts
crop_count <- count(crop_data$crop)%>%
as_tibble()%>%
dplyr::mutate(
freq = as.numeric(freq),
x = as.factor(x))%>%
dplyr::rename(crop = x,
studies = freq)%>%
arrange(-studies)
head(crop_count)
# Top 10 crops studied
fig_crop_studies <-
crop_count %>%
slice(c(1:10))%>%
ggplot(aes(x = reorder(crop, studies), y = studies)) +
geom_bar(stat = "identity",
color = NA,
fill = "#A6D1C6") +
coord_flip()+
geom_text(aes(label = studies), size = 3.75, hjust = -0.45)+
scale_y_continuous(
breaks = seq(0,125, by = 25),
limits = c(0, 135),
expand = c(0, 0)) +
theme_pubr()+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none"
) +
labs(
y = "No. of publications",
x = "Crop"
)
fig_crop_studies
# Top 10 crops studied
fig_crop_studies <-
crop_count %>%
slice(c(1:10))%>%
ggplot(aes(x = reorder(crop, studies), y = studies)) +
geom_bar(stat = "identity",
color = NA,
fill = "#A6D1C6") +
coord_flip()+
geom_text(aes(label = studies), size = 3.75, hjust = -0.4)+
scale_y_continuous(
breaks = seq(0,125, by = 25),
limits = c(0, 135),
expand = c(0, 0)) +
theme_pubr()+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none"
) +
labs(
y = "No. of publications",
x = "Crop"
)
fig_crop_studies
# Top 10 crops studied
fig_crop_studies <-
crop_count %>%
slice(c(1:10))%>%
ggplot(aes(x = reorder(crop, studies), y = studies)) +
geom_bar(stat = "identity",
color = NA,
fill = "#A6D1C6") +
coord_flip()+
geom_text(aes(label = studies), size = 3.75, hjust = -0.38)+
scale_y_continuous(
breaks = seq(0,125, by = 25),
limits = c(0, 135),
expand = c(0, 0)) +
theme_pubr()+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none"
) +
labs(
y = "No. of publications",
x = "Crop"
)
fig_crop_studies
# Top 10 crops studied
fig_crop_studies <-
crop_count %>%
slice(c(1:10))%>%
ggplot(aes(x = reorder(crop, studies), y = studies)) +
geom_bar(stat = "identity",
color = NA,
fill = "#A6D1C6") +
coord_flip()+
geom_text(aes(label = studies), size = 3.75, hjust = -0.2)+
scale_y_continuous(
breaks = seq(0,125, by = 25),
limits = c(0, 135),
expand = c(0, 0)) +
theme_pubr()+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none"
) +
labs(
y = "No. of publications",
x = "Crop"
)
fig_crop_studies
# Create a dataset with category counts
crop_cat <- count(crop_data$crop_category)%>%
as_tibble()%>%
dplyr::mutate(
freq = as.numeric(freq),
x = as.factor(x))%>%
dplyr::rename(cat = x,
studies = freq)%>%
arrange(-studies)
head(crop_cat)
# Top 10 crop categories studied
crop_cat_studies <-
crop_cat %>%
slice(c(1:10))%>%
ggplot(aes(x = reorder(cat, studies), y = studies)) +
geom_bar(stat = "summary",
color = NA,
fill = "#A6D1C6") +
coord_flip() +
geom_text(aes(label = studies), size = 3.75, hjust = -0.4)+
scale_y_continuous(breaks = seq(0, 175, by = 25),
limits = c(0, 200),
expand = c(0, 0)) +
theme_pubr() +
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position = "none"
)+
labs(
y = "No. of publications",
x = "Crop category"
)
crop_cat_studies
# Top 10 crop categories studied
crop_cat_studies <-
crop_cat %>%
slice(c(1:10))%>%
ggplot(aes(x = reorder(cat, studies), y = studies)) +
geom_bar(stat = "summary",
color = NA,
fill = "#A6D1C6") +
coord_flip() +
geom_text(aes(label = studies), size = 3.75, hjust = -0.2)+
scale_y_continuous(breaks = seq(0, 175, by = 25),
limits = c(0, 200),
expand = c(0, 0)) +
theme_pubr() +
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position = "none"
)+
labs(
y = "No. of publications",
x = "Crop category"
)
crop_cat_studies
crop_cat_species <- crop_data%>%
filter(duplicated(crop) == FALSE)%>%
dplyr::count(crop_category)%>%
as_tibble()%>%
dplyr::mutate(
n = as.numeric(n),
crop_category = as.factor(crop_category))%>%
dplyr::rename(
species = n)%>%
arrange(-species)
crop_cat_crop <-
crop_cat_species%>%
ggplot(aes(x = reorder(crop_category, species), y = species)) +
geom_bar(stat = "summary",
color = NA,
fill = "#A6D1C6") +
coord_flip() +
geom_text(aes(label = species), size = 3.75, hjust = -0.4)+
scale_y_continuous(breaks = seq(0, 25, by = 5),
limits = c(0, 26),
expand = c(0, 0)) +
theme_pubr() +
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position = "none"
)+
labs(
y = "No. of crop species",
x = "Crop category"
)
crop_cat_crop
# CROPS
crop_col <- ggarrange(fig_crop_studies, crop_cat_studies, crop_cat_crop,
nrow = 1, ncol = 3,
labels = "auto",
align = "hv")
ggsave("Plots/crops.pdf", crop_col,  width=16.5, height=4)
ggsave("Plots/crops.pdf", crop_col,  width=16.5, height=5)
ggsave("Plots/crops.pdf", crop_col,  width=15, height=4)
