scale_x_continuous(breaks = seq(1980, 2022, by =5))+
theme(#panel.grid.major.y = element_line(color = "#DAE1E7"),
axis.text.x = element_text(angle = 90, vjust = 0.5)
)
fig_years
# Data loading and conversion
data_bib <- convert2df(file = "Data/study_records/full_rec_bib.txt", dbsource = "wos", format = "plaintext")
# Main bibliometric analysis
results <- biblioAnalysis(data_bib, sep = ";")
options(width=100)
bib_summary <- summary(object = results, k = 10, pause = FALSE)
# COUNTRIES: COUNT
#generate country count data from the raw data generated by 'biblioAnalysis' package
country_count <-
results$Countries %>%
as_tibble() %>%
dplyr::rename("country" = 1,
"count" = 2)%>%
mutate(perc = paste0(round(count/sum(count)*100,2),"%")) #calculate percentage of papers
country_count
View(country_count)
# Data loading and conversion
data_bib <- convert2df(file = "Data/study_records/full_rec_bib.txt", dbsource = "wos", format = "plaintext")
# Main bibliometric analysis
results <- biblioAnalysis(data_bib, sep = ";")
options(width=100)
bib_summary <- summary(object = results, k = 10, pause = FALSE)
# COUNTRIES: COUNT
#generate country count data from the raw data generated by 'biblioAnalysis' package
country_count <-
results$Countries %>%
as_tibble() %>%
dplyr::rename("country" = 1,
"count" = 2)%>%
mutate(perc = paste0(round(count/sum(count)*100,2),"%")) #calculate percentage of papers
country_count
fig_country <-
country_count %>%
slice(c(1:10))%>%
mutate(country=factor(country)) %>%
ggplot(aes(x= reorder(country, count), y=count) ) +
geom_bar(stat="identity", fill="#A6D1C6") +
geom_text(aes(label = perc), size = 3.75, y= 7)+
geom_text(aes(label = count), size = 3.75, hjust = -0.35)+
scale_y_continuous(limits = c(0,150),
expand = c(0, 0)) +
coord_flip() +
theme_pubr()+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none"
) +
labs(x = "", y = "Count" )
fig_country
#Adding continents to the country list
country_count$continent <- countrycode(sourcevar = country_count$country,
origin = "country.name",
destination = "continent")
#Summarising the continent-wise study numbers
continent_count <-
country_count %>%
select(c(2,4))%>%
group_by(continent) %>%
summarise_at(vars(count), sum)%>% #summarising at the count column to derive sum
mutate(perc = (count / sum(count))*100) #converting the total counts to percentage
print(continent_count)
#WOS CATEGORIES
#~~~~~~~~~~~~~~
wos_cat <- read_delim("Data/study_records/wos_cat.txt", delim = "\t",
escape_double = FALSE, trim_ws = TRUE)%>%
as.data.frame()%>%
dplyr::rename("cat" = 1,
"count" = 2)%>%
mutate(perc = paste0(round(count/686*100,2),"%"))
wos_cat
fig_wos_cat <-
wos_cat %>%
slice(c(1:15))%>%
mutate(cat=factor(cat)) %>%
ggplot(aes(x= reorder(cat, count), y=count) ) +
geom_bar(stat="identity", fill="#A6D1C6") +
geom_text(aes(label = perc), size = 3, y= 8)+
coord_flip() +
scale_y_continuous(
breaks = seq(0,180, by = 40),
limits = c(0, 180),
expand = c(0, 0)) +
theme_pubr()+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none"
) +
labs(x = "", y = "Count" )
fig_wos_cat
# TOPIC TRENDS
# Generating synonym/thesaurus data for keyword trend analysis
synonym <- c("lettuce; lactuca sativa; lactuca sativa l.; lactuca-sativa l.; l.",
"led; leds; light emitting-diodes; light-emitting-diodes; led light; light-emitting diodes; emitting-diodes led; light-emitting diode",
"hydroponics; hydroponic; hydro-ponic",
"artificial intelligence; ai; machine learning",
"vertical farms; vertical farming;  vertical farm; vf; vertical-farming; vetical-farms",
"cea; controlled environment agriculture (cea); controlled environment agriculture; controlled environment",
"plant factory; pfals;pfal; plant factories",
"secondary metabolites; antioxidant"
)
#Generate topic trend using author keyword (DE)
trend <- fieldByYear(data_bib, field = "DE", min.freq = 5, n.items =5, graph = F,
synonyms = synonym)
ff <- trend$df_graph%>%as_tibble()
data_trend_graph <- ff#%>%slice(-c(3, 7:8, 14:17, 20 ))
trend_plot <-
ggplot(data = data_trend_graph,
aes(x = item,
y = year_med)) +
geom_linerange(aes(ymin = year_q1, ymax = year_q3),
size = 0.95,  color = "#69b3a2") +
geom_point(aes(size = freq), color = "#69b3a2", alpha = 0.7) +
scale_size(range = c(2, 7), name="Term frequency")+
coord_flip() +
theme_pubr()+
theme(panel.grid.major.y = element_line(color = "#DAE1E7", size = 0.2),
axis.line.y = element_blank())+
labs(x = "Author keywords",
y = "Year")+
scale_y_continuous(
breaks = seq(2010,2025, by = 5),
limits = c(2010, 2022))
trend_plot
# TOP KEYWORDS
top_key <- read_delim("Data/keyword_network/top_keywords.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)%>%
as_tibble()%>%
mutate(label = as.factor(label),
occurrences = as.numeric(occurrences),
focus  = as.factor(focus))
head(top_key)
study_focus <- read_excel("Data/study_records/data_ext.xlsx", sheet = "savedrecs")%>%
dplyr::rename(
"study_id" = "Study ID No." ,
"year" = "Publication Year",
"theme_1" = "Theme 1",
"theme_2" = "Theme 2",
"theme_3" = "Theme 3",
"photo" = "Environment"
)%>%
dplyr::mutate(
study_id = as.factor(study_id),
theme_1 = as.factor(theme_1),
theme_2 = as.factor(theme_2),
theme_3 = as.factor(theme_3),
photo = as.factor(photo)
)%>%
dplyr::select(c(1,7,9,10,11, 12))
#Melting dataset to contain all focus levels in one column
study <-  study_focus%>%
select(c(-2))%>%
reshape2::melt( id.vars = c(1))%>%select(c(-2,6))%>%na.omit()
# Creating individual string with study ids for each focus level
focus_tech <- study[study$value == "Technical", ]%>% # Filtering to contain one specified factor level
dplyr::rename(tech = study_id)%>%
select(c(1))%>%
as.list()%>%
unlist()
focus_bio <- study[study$value == "Biological", ]%>% # One factor level
dplyr::rename(bio = study_id)%>%
select(c(1))%>%
as.list()%>%
unlist()
focus_soc <- study[study$value == "Socio-economical", ]%>% # One factor level
dplyr::rename(soc = study_id)%>%
select(c(1))%>%
as.list()%>%
unlist()
study_focus <- read_excel("Data/study_records/data_ext.xlsx", sheet = "savedrecs")%>%
dplyr::rename(
"study_id" = "Study ID No." ,
"year" = "Publication Year",
"theme_1" = "Theme 1",
"theme_2" = "Theme 2",
"theme_3" = "Theme 3",
"photo" = "Environment"
)%>%
dplyr::mutate(
study_id = as.factor(study_id),
theme_1 = as.factor(theme_1),
theme_2 = as.factor(theme_2),
theme_3 = as.factor(theme_3),
photo = as.factor(photo)
)%>%
dplyr::select(c(1,7,9,10,11, 12))
#Melting dataset to contain all focus levels in one column
study <-  study_focus%>%
select(c(-2))%>%
reshape2::melt( id.vars = c(1))%>%select(c(-2,6))%>%na.omit()
# Creating individual string with study ids for each focus level
focus_tech <- study[study$value == "Technical", ]%>% # Filtering to contain one specified factor level
dplyr::rename(tech = study_id)%>%
select(c(1))%>%
as.list()%>%
unlist()
View(study_focus)
#Melting dataset to contain all focus levels in one column
study <-  study_focus%>%
select(c(-2))#%>%
View(study)
#Melting dataset to contain all focus levels in one column
study <-  study_focus%>%
select(c(-2))%>%
reshape2::melt( id.vars = c(1))#%>%select(c(-2,6))%>%na.omit()
View(study)
#Melting dataset to contain all focus levels in one column
study <-  study_focus%>%
select(-c(2,6))#%>%
#Melting dataset to contain all focus levels in one column
study <-  study_focus%>%
select(-c(2,6))%>%
reshape2::melt( id.vars = c(1))%>%na.omit()
# Creating individual string with study ids for each focus level
focus_tech <- study[study$value == "Technical", ]%>% # Filtering to contain one specified factor level
dplyr::rename(tech = study_id)%>%
select(c(1))%>%
as.list()%>%
unlist()
focus_bio <- study[study$value == "Biological", ]%>% # One factor level
dplyr::rename(bio = study_id)%>%
select(c(1))%>%
as.list()%>%
unlist()
focus_soc <- study[study$value == "Socio-economical", ]%>% # One factor level
dplyr::rename(soc = study_id)%>%
select(c(1))%>%
as.list()%>%
unlist()
focus_env <- study[study$value == "Environmental", ]%>% # One factor level
dplyr::rename(env = study_id)%>%
select(c(1))%>%
as.list()%>%
unlist()
# Plotting venn diagram using the venn.diagram function
venn.diagram(
x=list(A = focus_bio, B = focus_env, C = focus_soc, D =focus_tech),
category.names = c("Biological" , "Environmental" , "Socio-economical", "Technical"),
fontfamily = "sans",
main.fontfamily = "sans",
cat.fontfamily = "sans",
lty = 'blank',
cat.col =c("#377eb8","#4daf4a","#984ea3","#ff7f00"),
fill = c("#377eb8","#4daf4a","#984ea3","#ff7f00"), alpha = 0.2,
filename = "venn.png",
resolution = 600,
compression = "lzw",
output = F
)
# Input in the form of a named numeric vector
matrix <- euler(c("Biological" = 315, "Socio-economic" = 39, "Technical" = 141, "Environmental" = 30,
"Biological&Socio-economic" = 3, "Biological&Technical" = 22, "Socio-economic&Technical" = 7, "Biological&Environmental" = 7, "Socio-economic&Environmental" = 17, "Technical&Environmental" = 18,
"Biological&Socio-economic&Technical" = 1, "Socio-economic&Technical&Environmental" = 7, "Biological&Socio-economic&Environmental" = 1, "Biological&Technical&Environmental" = 0,
"Biological&Socio-economic&Technical&Environmental" = 0))
eulerr_options(labels = list(col = c("#377eb8","#4daf4a","#984ea3","#ff7f00"))) #setting the global options for euler plot function-here, label font colours
venn_euler <-
plot(matrix,
quantities = TRUE,
lty = 0,
fills = list(fill = c("#377eb8","#4daf4a","#984ea3","#ff7f00"), alpha = 0.2),
)
venn_euler
# Input in the form of a named numeric vector
matrix <- euler(c("Biological" = 315, "Socio-economic" = 39, "Technical" = 141, "Environmental" = 30,
"Biological&Socio-economic" = 3, "Biological&Technical" = 22, "Socio-economic&Technical" = 7, "Biological&Environmental" = 7, "Socio-economic&Environmental" = 17, "Technical&Environmental" = 18,
"Biological&Socio-economic&Technical" = 1, "Socio-economic&Technical&Environmental" = 7, "Biological&Socio-economic&Environmental" = 1, #"Biological&Technical&Environmental" = 0,
"Biological&Socio-economic&Technical&Environmental" = 0))
eulerr_options(labels = list(col = c("#377eb8","#4daf4a","#984ea3","#ff7f00"))) #setting the global options for euler plot function-here, label font colours
venn_euler <-
plot(matrix,
quantities = TRUE,
lty = 0,
fills = list(fill = c("#377eb8","#4daf4a","#984ea3","#ff7f00"), alpha = 0.2),
)
venn_euler
# Input in the form of a named numeric vector
matrix <- euler(c("Biological" = 315, "Socio-economic" = 39, "Technical" = 141, "Environmental" = 30,
"Biological&Socio-economic" = 3, "Biological&Technical" = 22, "Socio-economic&Technical" = 7, "Biological&Environmental" = 7, "Socio-economic&Environmental" = 17, "Technical&Environmental" = 18,
"Biological&Socio-economic&Technical" = 1, "Socio-economic&Technical&Environmental" = 7, "Biological&Socio-economic&Environmental" = 1 #"Biological&Technical&Environmental" = 0,
#"Biological&Socio-economic&Technical&Environmental" = 0
))
eulerr_options(labels = list(col = c("#377eb8","#4daf4a","#984ea3","#ff7f00"))) #setting the global options for euler plot function-here, label font colours
venn_euler <-
plot(matrix,
quantities = TRUE,
lty = 0,
fills = list(fill = c("#377eb8","#4daf4a","#984ea3","#ff7f00"), alpha = 0.2),
)
venn_euler
#VENN-EULER
ggsave("Plots/venn.pdf", venn_euler,  width=6, height=5)
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo))+
geom_bar(stat = "count", fill = "#C0D2E5", width  =.5)+
coord_flip()+
theme_pubr()+
labs(x = "", y = "No. of studies")+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none",
axis.ticks.y = element_blank()
)
photobio_focus
venn_bar <- ggarrange(venn_euler, photobio_focus, labels = "auto" )
ggsave("Plots/venn_bar.pdf", venn_bar, width=10, height=4.65)
focus_year <- read_excel("Data/study_records/focus_year.xlsx", sheet = "Sheet1")
#Create counts normalised by anuual publication counts
focus_year$norm_count <- (focus_year$count)/(focus_year$annual)
focus_trend <-
ggplot(data = focus_year, aes(x = year, y = category, fill = count))+
geom_raster()+
scale_fill_gradient(low="white", high="royalblue4")+
scale_y_discrete(labels= c("Tecnological", "Socio-economical", "Environmental", "Biological"))+
labs(x= "Year", y = "Research focus", fill = "No. of Studies")+
theme_bw()+
theme(axis.text=element_text(size=12))
ggsave("Plots/focus_trend.pdf", focus_trend, width=9, height=3.5)
# CROP COUNT
crop_data <- read_excel("Data/crop/crop_data_extraction.xlsx", sheet = "savedrecs")%>%
dplyr::select(c(1, 10, 11))%>%
dplyr::mutate(
crop = as.factor(crop),
crop_category = as.factor(crop_category),
study_id = as.factor(study_id)
)
crop_data <- separate_rows(crop_data, crop, sep = ",")# Separating comma separated multiple crops per study into individual column
# Create a dataset with crop counts
crop_count <- count(crop_data$crop)%>%
as_tibble()%>%
dplyr::mutate(
freq = as.numeric(freq),
x = as.factor(x))%>%
dplyr::rename(crop = x,
studies = freq)%>%
arrange(-studies)
head(crop_count)
# Top 10 crops studied
fig_crop_studies <-
crop_count %>%
slice(c(1:10))%>%
ggplot(aes(x = reorder(crop, studies), y = studies)) +
geom_bar(stat = "identity",
color = NA,
fill = "#A6D1C6") +
coord_flip()+
geom_text(aes(label = studies), size = 3.75, hjust = -0.2)+
scale_y_continuous(
breaks = seq(0,125, by = 25),
limits = c(0, 135),
expand = c(0, 0)) +
theme_pubr()+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none"
) +
labs(
y = "No. of publications",
x = "Crop"
)
fig_crop_studies
# Create a dataset with category counts
crop_cat <- count(crop_data$crop_category)%>%
as_tibble()%>%
dplyr::mutate(
freq = as.numeric(freq),
x = as.factor(x))%>%
dplyr::rename(cat = x,
studies = freq)%>%
arrange(-studies)
head(crop_cat)
# Top 10 crop categories studied
crop_cat_studies <-
crop_cat %>%
slice(c(1:10))%>%
ggplot(aes(x = reorder(cat, studies), y = studies)) +
geom_bar(stat = "summary",
color = NA,
fill = "#A6D1C6") +
coord_flip() +
geom_text(aes(label = studies), size = 3.75, hjust = -0.2)+
scale_y_continuous(breaks = seq(0, 175, by = 25),
limits = c(0, 200),
expand = c(0, 0)) +
theme_pubr() +
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position = "none"
)+
labs(
y = "No. of publications",
x = "Crop category"
)
crop_cat_studies
crop_cat_species <- crop_data%>%
filter(duplicated(crop) == FALSE)%>%
dplyr::count(crop_category)%>%
as_tibble()%>%
dplyr::mutate(
n = as.numeric(n),
crop_category = as.factor(crop_category))%>%
dplyr::rename(
species = n)%>%
arrange(-species)
crop_cat_crop <-
crop_cat_species%>%
ggplot(aes(x = reorder(crop_category, species), y = species)) +
geom_bar(stat = "summary",
color = NA,
fill = "#A6D1C6") +
coord_flip() +
geom_text(aes(label = species), size = 3.75, hjust = -0.4)+
scale_y_continuous(breaks = seq(0, 25, by = 5),
limits = c(0, 26),
expand = c(0, 0)) +
theme_pubr() +
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position = "none"
)+
labs(
y = "No. of crop species",
x = "Crop category"
)
crop_cat_crop
# YEARS
ggsave("Plots/years.pdf", fig_years,  width=7.2, height=4.5)
#COUNTRIES
ggsave("Plots/country.pdf", fig_country,  width=7.2, height=4.5)
#CATEGORIES
ggsave("Plots/wos_cat.pdf", fig_wos_cat,  width=8, height=5)
#TREND
ggsave("Plots/trend.pdf", trend_plot,  width=8.2, height=5.5)
# CROPS
crop_col <- ggarrange(fig_crop_studies, crop_cat_studies, crop_cat_crop,
nrow = 1, ncol = 3,
labels = "auto",
align = "hv")
ggsave("Plots/crops.pdf", crop_col,  width=15, height=4)
bib_summary <- summary(object = results, k = 10, pause = FALSE)
focus_trend <-
ggplot(data = focus_year, aes(x = year, y = category, fill = count))+
geom_raster()+
scale_fill_gradient(low="white", high="royalblue4")+
scale_y_discrete(labels= c("Technological", "Socio-economical", "Environmental", "Biological"))+
labs(x= "Year", y = "Research focus", fill = "No. of Studies")+
theme_bw()+
theme(axis.text=element_text(size=12))
ggsave("Plots/focus_trend.pdf", focus_trend, width=9, height=3.5)
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo))+
geom_bar(stat = "count", fill = "#C0D2E5", width  =.5)+
coord_flip()+
theme_pubr()+
labs(x = "", y = "No. of studies")+
scale_x_discrete(labels = c("Photobiological", "Non-photobiological"))
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo))+
geom_bar(stat = "count", fill = "#C0D2E5", width  =.5)+
coord_flip()+
theme_pubr()+
labs(x = "", y = "No. of studies")+
scale_x_discrete(labels = c("Photobiological", "Non-photobiological"))+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none",
axis.ticks.y = element_blank()
)
photobio_focus
photobio_focus <- study_focus%>%
select(c(1,6))%>%
na.omit()%>%
ggplot(aes(x = photo))+
geom_bar(stat = "count", fill = "#C0D2E5", width  =.5)+
coord_flip()+
theme_pubr()+
labs(x = "", y = "No. of studies")+
scale_x_discrete(labels = c("Non-photobiological", "Photobiological" ))+
theme(
axis.line.y = element_blank(),
panel.grid.major.x = element_line(color = "#DAE1E7", size = 0.25),
panel.grid.minor.x = element_line(color = "#DAE1E7", size = 0.1),
legend.position="none",
axis.ticks.y = element_blank()
)
photobio_focus
venn_bar <- ggarrange(venn_euler, photobio_focus, labels = "auto" )
ggsave("Plots/venn_bar.pdf", venn_bar, width=10, height=4.65)
